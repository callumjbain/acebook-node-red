name: CI-CD Pipeline
run-name: CI-CD
env: 
    EB_PACKAGE_S3_BUCKET_NAME : "acebook-red-bucket"
    DEPLOY_PACKAGE_NAME : "acebook-node-red_${{ github.sha }}.zip"
    AWS_REGION_NAME : "eu-west-2"
on: [push]

jobs:
    my_ci_part:
        runs-on: ubuntu-latest

        steps:
        - name: Git clone our repo
          uses: actions/checkout@v1

        - name: Create ZIP Deployment Package
          run: |
            cd $GITHUB_WORKSPACE 
            zip -r "${{ env.DEPLOY_PACKAGE_NAME }}" . -x \*.git\*

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.acebook_access_key }}
            aws-secret-access-key: ${{ secrets.acebook_secret_key }}
            aws-region: ${{ env.AWS_REGION_NAME }}

        - name: Copy Deployment package to S3 bucket
          run: aws s3 cp "${{ env.DEPLOY_PACKAGE_NAME }}" "s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/"
          

        
    my_cd_part: 
        runs-on: ubuntu-latest
        needs: [my_ci_part]

        steps: 
        - name: Configure my AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with: 
            aws-access-key-id: ${{ secrets.acebook_access_key }}
            aws-secret-access-key: ${{ secrets.acebook_secret_key }}
            aws-region: ${{ env.AWS_REGION_NAME }}
            
        - name: AWS Deploy push
          run: |
              aws deploy push \
              --application-name acebook-red \
              --ignore-hidden-files \
              --s3-location s3://${{ env.DEPLOY_PACKAGE_NAME }} \
              --source .


        - name: Deploy to EC2 using CodeDeploy
          run: |
              aws deploy create-deployment \
              --application-name acebook-red \
              --deployment-config-name CodeDeployDefault.AllAtOnce \
              --deployment-group-name production-red \
              --file-exists-behavior OVERWRITE \
              --s3-location "bucket=${{ env.EB_PACKAGE_S3_BUCKET_NAME }},key=${{ env.DEPLOY_PACKAGE_NAME }},bundleType=zip"
          
              